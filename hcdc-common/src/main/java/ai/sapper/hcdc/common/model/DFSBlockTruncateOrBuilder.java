// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_block.proto

package ai.sapper.hcdc.common.model;

public interface DFSBlockTruncateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:ai_sapper_hcdc_common_model.DFSBlockTruncate)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>required .ai_sapper_hcdc_common_model.DFSTransaction transaction = 1;</code>
   * @return Whether the transaction field is set.
   */
  boolean hasTransaction();
  /**
   * <code>required .ai_sapper_hcdc_common_model.DFSTransaction transaction = 1;</code>
   * @return The transaction.
   */
  ai.sapper.hcdc.common.model.DFSTransaction getTransaction();
  /**
   * <code>required .ai_sapper_hcdc_common_model.DFSTransaction transaction = 1;</code>
   */
  ai.sapper.hcdc.common.model.DFSTransactionOrBuilder getTransactionOrBuilder();

  /**
   * <code>required .ai_sapper_hcdc_common_model.DFSFile file = 2;</code>
   * @return Whether the file field is set.
   */
  boolean hasFile();
  /**
   * <code>required .ai_sapper_hcdc_common_model.DFSFile file = 2;</code>
   * @return The file.
   */
  ai.sapper.hcdc.common.model.DFSFile getFile();
  /**
   * <code>required .ai_sapper_hcdc_common_model.DFSFile file = 2;</code>
   */
  ai.sapper.hcdc.common.model.DFSFileOrBuilder getFileOrBuilder();

  /**
   * <code>required .ai_sapper_hcdc_common_model.DFSBlock block = 3;</code>
   * @return Whether the block field is set.
   */
  boolean hasBlock();
  /**
   * <code>required .ai_sapper_hcdc_common_model.DFSBlock block = 3;</code>
   * @return The block.
   */
  ai.sapper.hcdc.common.model.DFSBlock getBlock();
  /**
   * <code>required .ai_sapper_hcdc_common_model.DFSBlock block = 3;</code>
   */
  ai.sapper.hcdc.common.model.DFSBlockOrBuilder getBlockOrBuilder();

  /**
   * <code>required uint64 newLength = 4;</code>
   * @return Whether the newLength field is set.
   */
  boolean hasNewLength();
  /**
   * <code>required uint64 newLength = 4;</code>
   * @return The newLength.
   */
  long getNewLength();
}
